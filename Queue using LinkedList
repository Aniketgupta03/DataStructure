class Node():
    def __init__(self,data):
        self.data = data
        self.next = None

class Queue():
    def __init__(self):
        self.first = None
        self.last = None
        self.length = 0

    def __str__(self):
        return str(self.__dict__)

    def printme(self):
        currentPtr = self.first
        q = []
        while currentPtr != None:
            q.append(currentPtr.data)
            currentPtr = currentPtr.next
        return q

    def enqueue(self,data):
        newData = Node(data)
        if self.first == None:
            self.first = newData
            self.last = self.first
            self.length += 1
        else:
            self.last.next = newData
            self.last = newData
            self.length += 1

    def dequeue(self):
        currentPtr = self.first
        self.first = currentPtr.next
        self.length -= 1

    def peek(self):
        return self.first.data
    
    def isEmpty(self):
        if self.first.data == None:
            return "Queue is empty"
        else:
            return "Queue is not empty"

q = Queue()
start = True
while start:
    print("1. ENQUEUE")
    print("2. DEQUEUE")
    print("3. Peek")
    print("4. IsEmpty?")
    print("5. Print")
    print("6. EXIT")
    ans = int(input("Enter your choice: "))
    
    if ans == 1:
        ele = int(input("Value: "))
        q.enqueue(ele)
    elif ans == 2:
        q.dequeue()
    elif ans == 3:
        print(q.peek())
    elif ans == 4:
        print(q.isEmpty())
    elif ans == 5:
        print(q.printme())
    else:
        startover = False
â€ƒ
